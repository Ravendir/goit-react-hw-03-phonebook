{"version":3,"sources":["components/ContactList/ContactListStyles.module.css","components/Filter/FilterStyle.module.css","components/AppStyles.module.css","components/ContactForm/ContactFormStyles.module.css","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["module","exports","Filter","value","onChangeFilter","className","styles","filterContainer","filterInput","type","onChange","e","target","ContactForm","state","name","number","handleChange","event","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","nameInputId","shortid","generate","numberInputId","form","this","label","htmlFor","pattern","title","required","onInput","id","formInput","formButton","Component","ContactList","contacts","onRemoveContact","map","contact","list","onClick","listBtn","App","filter","addContact","task","contactId","cont","includes","alert","length","prevState","changeFilter","filterContacts","toLowerCase","removeContact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","contactForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebddf5e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactListStyles_list__1JdKq\",\"contacts\":\"ContactListStyles_contacts__3QDIN\",\"listBtn\":\"ContactListStyles_listBtn__1of7C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"FilterStyle_filterContainer__2qK5k\",\"filterInput\":\"FilterStyle_filterInput__37F_A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"AppStyles_contactForm__4-tXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFormStyles_label__Tp4Mx\",\"form\":\"ContactFormStyles_form__15A7x\",\"formInput\":\"ContactFormStyles_formInput__1kczF\",\"formButton\":\"ContactFormStyles_formButton__OjheD\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FilterStyle.module.css\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div className={styles.filterContainer}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.filterInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactFormStyles.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <h1>PhoneBook</h1>\r\n        <label className={styles.label} htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onInput={this.handleChange}\r\n            id={this.nameInputId}\r\n            className={styles.formInput}\r\n          />\r\n        </label>\r\n        <label className={styles.label} htmlFor={this.numberInputId}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n            className={styles.formInput}\r\n          />\r\n        </label>\r\n        <button className={styles.formButton} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactListStyles.module.css\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={styles.contacts}>\r\n    {contacts.map((contact) => (\r\n      <li className={styles.list} key={contact.id}>\r\n        {contact.name} : {contact.number}\r\n        {\r\n          <button\r\n            type=\"button\"\r\n            name=\"delete\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n            className={styles.listBtn}\r\n          >\r\n            delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport shortid from \"shortid\";\r\nimport styles from \"../components/AppStyles.module.css\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const nextContacts = this.state.contacts;\r\n    const prevContacts = prevState.contacts;\r\n\r\n    if (nextContacts !== prevContacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\r\n    }\r\n  }\r\n\r\n  addContact = (task) => {\r\n    const contactId = shortid.generate();\r\n    const identicalName = this.state.contacts\r\n      .map((cont) => cont.name)\r\n      .includes(task.name);\r\n\r\n    if (identicalName) {\r\n      alert(`${task.name} is already in contacts`);\r\n    } else if (!task.name.length) {\r\n      alert(\"Fields must be filled!\");\r\n    } else {\r\n      const contact = {\r\n        ...task,\r\n        id: contactId,\r\n      };\r\n\r\n      this.setState((prevState) => ({\r\n        contacts: [...prevState.contacts, contact],\r\n      }));\r\n    }\r\n  };\r\n\r\n  changeFilter = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  filterContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter((contacts) =>\r\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  removeContact = (contactId) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const filterContacts = this.filterContacts();\r\n    return (\r\n      <>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <h2 className={styles.contactForm}>Contacts</h2>\r\n        {filterContacts.length > 1 && (\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        )}\r\n        {filterContacts.length ? (\r\n          <ContactList\r\n            contacts={filterContacts}\r\n            onRemoveContact={this.removeContact}\r\n          />\r\n        ) : (\r\n          <p className={styles.contactForm}>\r\n            Your phonebook is empty. Please add contact.\r\n          </p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}